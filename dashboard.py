
import networkx as nx
import streamlit as st
import matplotlib.pyplot as plt

from utils.utils import get_stack_df, get_module_df

st.set_option('deprecation.showPyplotGlobalUse', False)
#st.set_page_config(layout="wide")

st.title("Graph Malware Detector")

# File Upload Section
st. markdown("Upload Malware XML file to detect graph malware")
upload_cols = st.columns([2, 1])

file_upload = upload_cols[0].file_uploader("Upload XML file", type=["xml"])
with upload_cols[1]:
    with st.expander("Upload File Requirements"):
        st.write("""
        - File must be in XML format, obtained from Process Monitor
        - Naming convention: <malware_name>.<event_type>.xml, e.g., "wannacry.file.xml". This will allow you to track the process name and event type in the graph.
        - File must be a Windows executable
        """)

@st.cache(allow_output_mutation=True)
def parse_user_xml(file):
    df = get_module_df(file_upload)
    G = nx.from_pandas_edgelist(df.fillna("<NA>"), source='ParentProcessIndex', target='ProcessIndex', edge_attr='CreateTime')

    node_atttr_cols = [col for col in df.columns if col not in ['ParentProcessIndex', 'ProcessIndex', 'CreateTime']]
    for col in node_atttr_cols:
        for index, row in df.iterrows():
            G.nodes[row['ProcessIndex']][col] = row[col]
            G.nodes[row['ParentProcessIndex']][col] = row[col]      
    return G, df

if file_upload is not None:

    G, df = parse_user_xml(file_upload)
    df#.set_index('ProcessIndex', inplace=True)
    plt.figure(3,figsize=(8,8)) 
    labels = nx.get_node_attributes(G, 'ProcessName')
    pos = nx.spring_layout(G, k=.4)
    fig = nx.draw(G, pos=pos, node_size=350, node_color='g', labels=labels)
    st.pyplot(fig)
    #st.write(df)
