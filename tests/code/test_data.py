

import torch
import pytest
import pandas as pd

from gatmalware import data

# Test fixtures
@pytest.fixture
def df(scope='module'):
    data = {'ProcessId': [1, 2, 3],
            'ParentProcessId': [4, 5, 6],
            'ProcessName': ['good.exe', 'worse.exe', 'bad.exe'],}
    df = pd.DataFrame(data) 
    return df

# Test functions
def test_get_feature_vectors():
    pass

def test_get_stack_df():
    pass

def test_get_module_df():
    pass

@pytest.mark.parametrize(
    'file_name, expected',
    [
        ('worse.exe', torch.tensor([0, 1, 0])),
        ('bad.exe', torch.tensor([0, 0, 1])),
    ]
)
def test_assign_label(df, file_name, expected):
    labels = data.assign_labels(df=df.copy(), file_name=file_name)
    assert torch.equal(labels, expected)

def test_get_edge_list(df):
    edge_index, pid_lookup = data.get_edge_list(graph_nodes=df.copy(), return_lookup=True)
    assert edge_index.shape == torch.Size([2, 12])
    assert pid_lookup == {1: 0, 4: 1, 2: 2, 5: 3, 3: 4, 6: 5}